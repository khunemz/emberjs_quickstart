{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ember-quickstart/tests/integration/components/map-test.js","ember-quickstart/tests/integration/components/rental-test.js","ember-quickstart/tests/integration/components/rental/image-test.js","ember-quickstart/tests/test-helper.js","ember-quickstart/tests/unit/routes/index-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"ember-quickstart/tests/integration/components/map-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | map', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Map />\n      */\n      {\"id\":\"qsjB9Jxq\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"map\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\"meta\":{}}));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <Map>\n              template block text\n            </Map>\n          \n      */\n      {\"id\":\"EGe31vez\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"map\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\"meta\":{}}));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"ember-quickstart/tests/integration/components/rental-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | rental', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders information about a rental property', async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Rental />\n      */\n      {\"id\":\"hx62gMPb\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"rental\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\"meta\":{}}));\n      assert.dom('article').hasClass('rental');\n      assert.dom('article h3').hasText('Grand Old Mansion');\n      assert.dom('article .detail.owner').includesText('Veruca Salt');\n      assert.dom('article .detail.type').includesText('Standalone');\n      assert.dom('article .detail.location').includesText('San Francisco');\n      assert.dom('article .detail.bedrooms').includesText('15');\n      assert.dom('article .image').exists();\n    });\n  });\n});","define(\"ember-quickstart/tests/integration/components/rental/image-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | rental/image', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Rental::Image\n          src=\"/assets/images/teaching-tomster.png\"\n          alt=\"Teaching Tomster\"\n        />\n      */\n      {\"id\":\"kKi5f4GW\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"rental/image\\\",[[24,\\\"src\\\",\\\"/assets/images/teaching-tomster.png\\\"],[24,\\\"alt\\\",\\\"Teaching Tomster\\\"]],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\"meta\":{}}));\n      assert.dom('.image img').exists().hasAttribute('src', '/assets/images/teaching-tomster.png').hasAttribute('alt', 'Teaching Tomster');\n    });\n    (0, _qunit.test)('clicking on the component toggle its size', async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n          <Rental::Image\n            src=\"/assets/images/teaching-tomster.png\"\n            alt=\"Teaching Tomster\"\n          />\n        \n      */\n      {\"id\":\"FzxUON62\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n    \\\"],[8,\\\"rental/image\\\",[[24,\\\"src\\\",\\\"/assets/images/teaching-tomster.png\\\"],[24,\\\"alt\\\",\\\"Teaching Tomster\\\"]],[[],[]],null],[2,\\\"\\\\n  \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\"meta\":{}}));\n      assert.dom('button.image').exists();\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').hasClass('large');\n      assert.dom('.image small').hasText('View Smaller');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n    });\n  });\n});","define(\"ember-quickstart/tests/test-helper\", [\"ember-quickstart/app\", \"ember-quickstart/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"ember-quickstart/tests/unit/routes/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define('ember-quickstart/config/environment', [], function() {\n  var prefix = 'ember-quickstart';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('ember-quickstart/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}